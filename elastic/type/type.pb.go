// Code generated by protoc-gen-go. DO NOT EDIT.
// source: type.proto

package google_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Represents a whole calendar date, e.g. date of birth. The time of day and
// time zone are either specified elsewhere or are not significant. The date
// is relative to the Proleptic Gregorian Calendar. The day may be 0 to
// represent a year and month where the day is not significant, e.g. credit card
// expiration date. The year may be 0 to represent a month and day independent
// of year, e.g. anniversary date. Related types are [google.type.TimeOfDay][google.type.TimeOfDay]
// and `google.protobuf.Timestamp`.
type Date struct {
	// Year of date. Must be from 1 to 9999, or 0 if specifying a date without
	// a year.
	Year int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	// Month of year. Must be from 1 to 12.
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	// Day of month. Must be from 1 to 31 and valid for the year and month, or 0
	// if specifying a year/month where the day is not significant.
	Day                  int32    `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Date) Reset()         { *m = Date{} }
func (m *Date) String() string { return proto.CompactTextString(m) }
func (*Date) ProtoMessage()    {}
func (*Date) Descriptor() ([]byte, []int) {
	return fileDescriptor_8eaed4801c3a9059, []int{0}
}

func (m *Date) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Date.Unmarshal(m, b)
}
func (m *Date) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Date.Marshal(b, m, deterministic)
}
func (m *Date) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Date.Merge(m, src)
}
func (m *Date) XXX_Size() int {
	return xxx_messageInfo_Date.Size(m)
}
func (m *Date) XXX_DiscardUnknown() {
	xxx_messageInfo_Date.DiscardUnknown(m)
}

var xxx_messageInfo_Date proto.InternalMessageInfo

func (m *Date) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Date) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *Date) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func init() {
	proto.RegisterType((*Date)(nil), "google.type.Date")
}

func init() { proto.RegisterFile("type.proto", fileDescriptor_8eaed4801c3a9059) }

var fileDescriptor_8eaed4801c3a9059 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xa9, 0x2c, 0x48,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4e, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x03,
	0x09, 0x29, 0x39, 0x71, 0xb1, 0xb8, 0x24, 0x96, 0xa4, 0x0a, 0x09, 0x71, 0xb1, 0x54, 0xa6, 0x26,
	0x16, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x81, 0xd9, 0x42, 0x22, 0x5c, 0xac, 0xb9, 0xf9,
	0x79, 0x25, 0x19, 0x12, 0x4c, 0x60, 0x41, 0x08, 0x47, 0x48, 0x80, 0x8b, 0x39, 0x25, 0xb1, 0x52,
	0x82, 0x19, 0x2c, 0x06, 0x62, 0x3a, 0x25, 0x72, 0xf1, 0x27, 0xe7, 0xe7, 0xea, 0x21, 0x19, 0xeb,
	0xc4, 0x09, 0x32, 0x34, 0x00, 0x64, 0x5d, 0x00, 0x63, 0x94, 0x45, 0x7a, 0x66, 0x49, 0x46, 0x69,
	0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x4a, 0x6a, 0x59, 0x6a, 0x45, 0x41, 0xb1, 0x7e, 0x7a, 0xbe,
	0x6e, 0x6e, 0x66, 0x72, 0x51, 0xbe, 0x7e, 0x99, 0x91, 0x7e, 0x6a, 0x4e, 0x62, 0x71, 0x49, 0x66,
	0xb2, 0x3e, 0x48, 0xa7, 0x35, 0xd4, 0x14, 0xb0, 0x53, 0x7f, 0x30, 0x32, 0x2e, 0x62, 0x62, 0x76,
	0x0f, 0x09, 0x48, 0x62, 0x03, 0xf3, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x7f, 0xcf,
	0x9f, 0xc8, 0x00, 0x00, 0x00,
}
